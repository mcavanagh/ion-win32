#foreign(header = "<winsvc.h>")

@foreign
struct SERVICE_TRIGGER_CUSTOM_STATE_ID {
    Data: DWORD[2];
}

/*
@PROBLEM Nested struct def at line 477, C:\Program Files (x86)\Windows Kits\10\include\10.0.16299.0\um\winsvc.h

@foreign
struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM {
    u: (null);
}
*/

/*
@PROBLEM Nested struct def at line 477, C:\Program Files (x86)\Windows Kits\10\include\10.0.16299.0\um\winsvc.h

_SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM
*/

@foreign
typedef LPSERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM = _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM*;

@foreign
struct _SERVICE_DESCRIPTIONA {
    lpDescription: LPSTR;
}

@foreign
typedef SERVICE_DESCRIPTIONA = _SERVICE_DESCRIPTIONA;

@foreign
typedef LPSERVICE_DESCRIPTIONA = _SERVICE_DESCRIPTIONA*;

@foreign
struct _SERVICE_DESCRIPTIONW {
    lpDescription: LPWSTR;
}

@foreign
typedef SERVICE_DESCRIPTIONW = _SERVICE_DESCRIPTIONW;

@foreign
typedef LPSERVICE_DESCRIPTIONW = _SERVICE_DESCRIPTIONW*;

@foreign
typedef SERVICE_DESCRIPTION = SERVICE_DESCRIPTIONA;

@foreign
typedef LPSERVICE_DESCRIPTION = LPSERVICE_DESCRIPTIONA;

@foreign
enum _SC_ACTION_TYPE {
    SC_ACTION_NONE = 0,
    SC_ACTION_RESTART = 1,
    SC_ACTION_REBOOT = 2,
    SC_ACTION_RUN_COMMAND = 3,
    SC_ACTION_OWN_RESTART = 4,
}

@foreign
typedef SC_ACTION_TYPE = _SC_ACTION_TYPE;

@foreign
struct _SC_ACTION {
    Type: SC_ACTION_TYPE;
    Delay: DWORD;
}

@foreign
typedef SC_ACTION = _SC_ACTION;

@foreign
typedef LPSC_ACTION = _SC_ACTION*;

@foreign
struct _SERVICE_FAILURE_ACTIONSA {
    dwResetPeriod: DWORD;
    lpRebootMsg: LPSTR;
    lpCommand: LPSTR;
    cActions: DWORD;
    lpsaActions: SC_ACTION*;
}

@foreign
typedef SERVICE_FAILURE_ACTIONSA = _SERVICE_FAILURE_ACTIONSA;

@foreign
typedef LPSERVICE_FAILURE_ACTIONSA = _SERVICE_FAILURE_ACTIONSA*;

@foreign
struct _SERVICE_FAILURE_ACTIONSW {
    dwResetPeriod: DWORD;
    lpRebootMsg: LPWSTR;
    lpCommand: LPWSTR;
    cActions: DWORD;
    lpsaActions: SC_ACTION*;
}

@foreign
typedef SERVICE_FAILURE_ACTIONSW = _SERVICE_FAILURE_ACTIONSW;

@foreign
typedef LPSERVICE_FAILURE_ACTIONSW = _SERVICE_FAILURE_ACTIONSW*;

@foreign
typedef SERVICE_FAILURE_ACTIONS = SERVICE_FAILURE_ACTIONSA;

@foreign
typedef LPSERVICE_FAILURE_ACTIONS = LPSERVICE_FAILURE_ACTIONSA;

@foreign
struct _SERVICE_DELAYED_AUTO_START_INFO {
    fDelayedAutostart: BOOL;
}

@foreign
typedef SERVICE_DELAYED_AUTO_START_INFO = _SERVICE_DELAYED_AUTO_START_INFO;

@foreign
typedef LPSERVICE_DELAYED_AUTO_START_INFO = _SERVICE_DELAYED_AUTO_START_INFO*;

@foreign
struct _SERVICE_FAILURE_ACTIONS_FLAG {
    fFailureActionsOnNonCrashFailures: BOOL;
}

@foreign
typedef SERVICE_FAILURE_ACTIONS_FLAG = _SERVICE_FAILURE_ACTIONS_FLAG;

@foreign
typedef LPSERVICE_FAILURE_ACTIONS_FLAG = _SERVICE_FAILURE_ACTIONS_FLAG*;

@foreign
struct _SERVICE_SID_INFO {
    dwServiceSidType: DWORD;
}

@foreign
typedef SERVICE_SID_INFO = _SERVICE_SID_INFO;

@foreign
typedef LPSERVICE_SID_INFO = _SERVICE_SID_INFO*;

@foreign
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA {
    pmszRequiredPrivileges: LPSTR;
}

@foreign
typedef SERVICE_REQUIRED_PRIVILEGES_INFOA = _SERVICE_REQUIRED_PRIVILEGES_INFOA;

@foreign
typedef LPSERVICE_REQUIRED_PRIVILEGES_INFOA = _SERVICE_REQUIRED_PRIVILEGES_INFOA*;

@foreign
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW {
    pmszRequiredPrivileges: LPWSTR;
}

@foreign
typedef SERVICE_REQUIRED_PRIVILEGES_INFOW = _SERVICE_REQUIRED_PRIVILEGES_INFOW;

@foreign
typedef LPSERVICE_REQUIRED_PRIVILEGES_INFOW = _SERVICE_REQUIRED_PRIVILEGES_INFOW*;

@foreign
typedef SERVICE_REQUIRED_PRIVILEGES_INFO = SERVICE_REQUIRED_PRIVILEGES_INFOA;

@foreign
typedef LPSERVICE_REQUIRED_PRIVILEGES_INFO = LPSERVICE_REQUIRED_PRIVILEGES_INFOA;

@foreign
struct _SERVICE_PRESHUTDOWN_INFO {
    dwPreshutdownTimeout: DWORD;
}

@foreign
typedef SERVICE_PRESHUTDOWN_INFO = _SERVICE_PRESHUTDOWN_INFO;

@foreign
typedef LPSERVICE_PRESHUTDOWN_INFO = _SERVICE_PRESHUTDOWN_INFO*;

@foreign
struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM {
    dwDataType: DWORD;
    cbData: DWORD;
    pData: PBYTE;
}

@foreign
typedef SERVICE_TRIGGER_SPECIFIC_DATA_ITEM = _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;

@foreign
typedef PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM = _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM*;

@foreign
struct _SERVICE_TRIGGER {
    dwTriggerType: DWORD;
    dwAction: DWORD;
    pTriggerSubtype: GUID*;
    cDataItems: DWORD;
    pDataItems: PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM;
}

@foreign
typedef SERVICE_TRIGGER = _SERVICE_TRIGGER;

@foreign
typedef PSERVICE_TRIGGER = _SERVICE_TRIGGER*;

@foreign
struct _SERVICE_TRIGGER_INFO {
    cTriggers: DWORD;
    pTriggers: PSERVICE_TRIGGER;
    pReserved: PBYTE;
}

@foreign
typedef SERVICE_TRIGGER_INFO = _SERVICE_TRIGGER_INFO;

@foreign
typedef PSERVICE_TRIGGER_INFO = _SERVICE_TRIGGER_INFO*;

@foreign
struct _SERVICE_PREFERRED_NODE_INFO {
    usPreferredNode: USHORT;
    fDelete: BOOLEAN;
}

@foreign
typedef SERVICE_PREFERRED_NODE_INFO = _SERVICE_PREFERRED_NODE_INFO;

@foreign
typedef LPSERVICE_PREFERRED_NODE_INFO = _SERVICE_PREFERRED_NODE_INFO*;

@foreign
struct _SERVICE_TIMECHANGE_INFO {
    liNewTime: LARGE_INTEGER;
    liOldTime: LARGE_INTEGER;
}

@foreign
typedef SERVICE_TIMECHANGE_INFO = _SERVICE_TIMECHANGE_INFO;

@foreign
typedef PSERVICE_TIMECHANGE_INFO = _SERVICE_TIMECHANGE_INFO*;

@foreign
struct _SERVICE_LAUNCH_PROTECTED_INFO {
    dwLaunchProtected: DWORD;
}

@foreign
typedef SERVICE_LAUNCH_PROTECTED_INFO = _SERVICE_LAUNCH_PROTECTED_INFO;

@foreign
typedef PSERVICE_LAUNCH_PROTECTED_INFO = _SERVICE_LAUNCH_PROTECTED_INFO*;

@foreign
struct SC_HANDLE__ {
    unused: int;
}

@foreign
typedef SC_HANDLE = SC_HANDLE__*;

@foreign
typedef LPSC_HANDLE = SC_HANDLE*;

@foreign
struct SERVICE_STATUS_HANDLE__ {
    unused: int;
}

@foreign
typedef SERVICE_STATUS_HANDLE = SERVICE_STATUS_HANDLE__*;

@foreign
enum _SC_STATUS_TYPE {
    SC_STATUS_PROCESS_INFO = 0,
}

@foreign
typedef SC_STATUS_TYPE = _SC_STATUS_TYPE;

@foreign
enum _SC_ENUM_TYPE {
    SC_ENUM_PROCESS_INFO = 0,
}

@foreign
typedef SC_ENUM_TYPE = _SC_ENUM_TYPE;

@foreign
struct _SERVICE_STATUS {
    dwServiceType: DWORD;
    dwCurrentState: DWORD;
    dwControlsAccepted: DWORD;
    dwWin32ExitCode: DWORD;
    dwServiceSpecificExitCode: DWORD;
    dwCheckPoint: DWORD;
    dwWaitHint: DWORD;
}

@foreign
typedef SERVICE_STATUS = _SERVICE_STATUS;

@foreign
typedef LPSERVICE_STATUS = _SERVICE_STATUS*;

@foreign
struct _SERVICE_STATUS_PROCESS {
    dwServiceType: DWORD;
    dwCurrentState: DWORD;
    dwControlsAccepted: DWORD;
    dwWin32ExitCode: DWORD;
    dwServiceSpecificExitCode: DWORD;
    dwCheckPoint: DWORD;
    dwWaitHint: DWORD;
    dwProcessId: DWORD;
    dwServiceFlags: DWORD;
}

@foreign
typedef SERVICE_STATUS_PROCESS = _SERVICE_STATUS_PROCESS;

@foreign
typedef LPSERVICE_STATUS_PROCESS = _SERVICE_STATUS_PROCESS*;

@foreign
struct _ENUM_SERVICE_STATUSA {
    lpServiceName: LPSTR;
    lpDisplayName: LPSTR;
    ServiceStatus: SERVICE_STATUS;
}

@foreign
typedef ENUM_SERVICE_STATUSA = _ENUM_SERVICE_STATUSA;

@foreign
typedef LPENUM_SERVICE_STATUSA = _ENUM_SERVICE_STATUSA*;

@foreign
struct _ENUM_SERVICE_STATUSW {
    lpServiceName: LPWSTR;
    lpDisplayName: LPWSTR;
    ServiceStatus: SERVICE_STATUS;
}

@foreign
typedef ENUM_SERVICE_STATUSW = _ENUM_SERVICE_STATUSW;

@foreign
typedef LPENUM_SERVICE_STATUSW = _ENUM_SERVICE_STATUSW*;

@foreign
typedef ENUM_SERVICE_STATUS = ENUM_SERVICE_STATUSA;

@foreign
typedef LPENUM_SERVICE_STATUS = LPENUM_SERVICE_STATUSA;

@foreign
struct _ENUM_SERVICE_STATUS_PROCESSA {
    lpServiceName: LPSTR;
    lpDisplayName: LPSTR;
    ServiceStatusProcess: SERVICE_STATUS_PROCESS;
}

@foreign
typedef ENUM_SERVICE_STATUS_PROCESSA = _ENUM_SERVICE_STATUS_PROCESSA;

@foreign
typedef LPENUM_SERVICE_STATUS_PROCESSA = _ENUM_SERVICE_STATUS_PROCESSA*;

@foreign
struct _ENUM_SERVICE_STATUS_PROCESSW {
    lpServiceName: LPWSTR;
    lpDisplayName: LPWSTR;
    ServiceStatusProcess: SERVICE_STATUS_PROCESS;
}

@foreign
typedef ENUM_SERVICE_STATUS_PROCESSW = _ENUM_SERVICE_STATUS_PROCESSW;

@foreign
typedef LPENUM_SERVICE_STATUS_PROCESSW = _ENUM_SERVICE_STATUS_PROCESSW*;

@foreign
typedef ENUM_SERVICE_STATUS_PROCESS = ENUM_SERVICE_STATUS_PROCESSA;

@foreign
typedef LPENUM_SERVICE_STATUS_PROCESS = LPENUM_SERVICE_STATUS_PROCESSA;

@foreign
typedef SC_LOCK = LPVOID;

@foreign
struct _QUERY_SERVICE_LOCK_STATUSA {
    fIsLocked: DWORD;
    lpLockOwner: LPSTR;
    dwLockDuration: DWORD;
}

@foreign
typedef QUERY_SERVICE_LOCK_STATUSA = _QUERY_SERVICE_LOCK_STATUSA;

@foreign
typedef LPQUERY_SERVICE_LOCK_STATUSA = _QUERY_SERVICE_LOCK_STATUSA*;

@foreign
struct _QUERY_SERVICE_LOCK_STATUSW {
    fIsLocked: DWORD;
    lpLockOwner: LPWSTR;
    dwLockDuration: DWORD;
}

@foreign
typedef QUERY_SERVICE_LOCK_STATUSW = _QUERY_SERVICE_LOCK_STATUSW;

@foreign
typedef LPQUERY_SERVICE_LOCK_STATUSW = _QUERY_SERVICE_LOCK_STATUSW*;

@foreign
typedef QUERY_SERVICE_LOCK_STATUS = QUERY_SERVICE_LOCK_STATUSA;

@foreign
typedef LPQUERY_SERVICE_LOCK_STATUS = LPQUERY_SERVICE_LOCK_STATUSA;

@foreign
struct _QUERY_SERVICE_CONFIGA {
    dwServiceType: DWORD;
    dwStartType: DWORD;
    dwErrorControl: DWORD;
    lpBinaryPathName: LPSTR;
    lpLoadOrderGroup: LPSTR;
    dwTagId: DWORD;
    lpDependencies: LPSTR;
    lpServiceStartName: LPSTR;
    lpDisplayName: LPSTR;
}

@foreign
typedef QUERY_SERVICE_CONFIGA = _QUERY_SERVICE_CONFIGA;

@foreign
typedef LPQUERY_SERVICE_CONFIGA = _QUERY_SERVICE_CONFIGA*;

@foreign
struct _QUERY_SERVICE_CONFIGW {
    dwServiceType: DWORD;
    dwStartType: DWORD;
    dwErrorControl: DWORD;
    lpBinaryPathName: LPWSTR;
    lpLoadOrderGroup: LPWSTR;
    dwTagId: DWORD;
    lpDependencies: LPWSTR;
    lpServiceStartName: LPWSTR;
    lpDisplayName: LPWSTR;
}

@foreign
typedef QUERY_SERVICE_CONFIGW = _QUERY_SERVICE_CONFIGW;

@foreign
typedef LPQUERY_SERVICE_CONFIGW = _QUERY_SERVICE_CONFIGW*;

@foreign
typedef QUERY_SERVICE_CONFIG = QUERY_SERVICE_CONFIGA;

@foreign
typedef LPQUERY_SERVICE_CONFIG = LPQUERY_SERVICE_CONFIGA;

@foreign
typedef SERVICE_MAIN_FUNCTIONW = func(dwNumServicesArgs: DWORD, lpServiceArgVectors: LPWSTR*);

@foreign
typedef SERVICE_MAIN_FUNCTIONA = func(dwNumServicesArgs: DWORD, lpServiceArgVectors: LPTSTR*);

@foreign
typedef LPSERVICE_MAIN_FUNCTIONW = func(dwNumServicesArgs: DWORD, lpServiceArgVectors: LPWSTR*);

@foreign
typedef LPSERVICE_MAIN_FUNCTIONA = func(dwNumServicesArgs: DWORD, lpServiceArgVectors: LPSTR*);

@foreign
struct _SERVICE_TABLE_ENTRYA {
    lpServiceName: LPSTR;
    lpServiceProc: LPSERVICE_MAIN_FUNCTIONA;
}

@foreign
typedef SERVICE_TABLE_ENTRYA = _SERVICE_TABLE_ENTRYA;

@foreign
typedef LPSERVICE_TABLE_ENTRYA = _SERVICE_TABLE_ENTRYA*;

@foreign
struct _SERVICE_TABLE_ENTRYW {
    lpServiceName: LPWSTR;
    lpServiceProc: LPSERVICE_MAIN_FUNCTIONW;
}

@foreign
typedef SERVICE_TABLE_ENTRYW = _SERVICE_TABLE_ENTRYW;

@foreign
typedef LPSERVICE_TABLE_ENTRYW = _SERVICE_TABLE_ENTRYW*;

@foreign
typedef SERVICE_TABLE_ENTRY = SERVICE_TABLE_ENTRYA;

@foreign
typedef LPSERVICE_TABLE_ENTRY = LPSERVICE_TABLE_ENTRYA;

@foreign
typedef HANDLER_FUNCTION = func(dwControl: DWORD);

@foreign
typedef HANDLER_FUNCTION_EX = func(dwControl: DWORD, dwEventType: DWORD, lpEventData: LPVOID, lpContext: LPVOID): DWORD;

@foreign
typedef LPHANDLER_FUNCTION = func(dwControl: DWORD);

@foreign
typedef LPHANDLER_FUNCTION_EX = func(dwControl: DWORD, dwEventType: DWORD, lpEventData: LPVOID, lpContext: LPVOID): DWORD;

@foreign
typedef PFN_SC_NOTIFY_CALLBACK = func(pParameter: PVOID);

@foreign
struct _SERVICE_NOTIFY_1 {
    dwVersion: DWORD;
    pfnNotifyCallback: PFN_SC_NOTIFY_CALLBACK;
    pContext: PVOID;
    dwNotificationStatus: DWORD;
    ServiceStatus: SERVICE_STATUS_PROCESS;
}

@foreign
typedef SERVICE_NOTIFY_1 = _SERVICE_NOTIFY_1;

@foreign
typedef PSERVICE_NOTIFY_1 = _SERVICE_NOTIFY_1*;

@foreign
struct _SERVICE_NOTIFY_2A {
    dwVersion: DWORD;
    pfnNotifyCallback: PFN_SC_NOTIFY_CALLBACK;
    pContext: PVOID;
    dwNotificationStatus: DWORD;
    ServiceStatus: SERVICE_STATUS_PROCESS;
    dwNotificationTriggered: DWORD;
    pszServiceNames: LPSTR;
}

@foreign
typedef SERVICE_NOTIFY_2A = _SERVICE_NOTIFY_2A;

@foreign
typedef PSERVICE_NOTIFY_2A = _SERVICE_NOTIFY_2A*;

@foreign
struct _SERVICE_NOTIFY_2W {
    dwVersion: DWORD;
    pfnNotifyCallback: PFN_SC_NOTIFY_CALLBACK;
    pContext: PVOID;
    dwNotificationStatus: DWORD;
    ServiceStatus: SERVICE_STATUS_PROCESS;
    dwNotificationTriggered: DWORD;
    pszServiceNames: LPWSTR;
}

@foreign
typedef SERVICE_NOTIFY_2W = _SERVICE_NOTIFY_2W;

@foreign
typedef PSERVICE_NOTIFY_2W = _SERVICE_NOTIFY_2W*;

@foreign
typedef SERVICE_NOTIFY_2 = SERVICE_NOTIFY_2A;

@foreign
typedef PSERVICE_NOTIFY_2 = PSERVICE_NOTIFY_2A;

@foreign
typedef SERVICE_NOTIFYA = SERVICE_NOTIFY_2A;

@foreign
typedef PSERVICE_NOTIFYA = SERVICE_NOTIFY_2A*;

@foreign
typedef SERVICE_NOTIFYW = SERVICE_NOTIFY_2W;

@foreign
typedef PSERVICE_NOTIFYW = SERVICE_NOTIFY_2W*;

@foreign
typedef SERVICE_NOTIFY = SERVICE_NOTIFYA;

@foreign
typedef PSERVICE_NOTIFY = PSERVICE_NOTIFYA;

@foreign
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA {
    dwReason: DWORD;
    pszComment: LPSTR;
    ServiceStatus: SERVICE_STATUS_PROCESS;
}

@foreign
typedef SERVICE_CONTROL_STATUS_REASON_PARAMSA = _SERVICE_CONTROL_STATUS_REASON_PARAMSA;

@foreign
typedef PSERVICE_CONTROL_STATUS_REASON_PARAMSA = _SERVICE_CONTROL_STATUS_REASON_PARAMSA*;

@foreign
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW {
    dwReason: DWORD;
    pszComment: LPWSTR;
    ServiceStatus: SERVICE_STATUS_PROCESS;
}

@foreign
typedef SERVICE_CONTROL_STATUS_REASON_PARAMSW = _SERVICE_CONTROL_STATUS_REASON_PARAMSW;

@foreign
typedef PSERVICE_CONTROL_STATUS_REASON_PARAMSW = _SERVICE_CONTROL_STATUS_REASON_PARAMSW*;

@foreign
typedef SERVICE_CONTROL_STATUS_REASON_PARAMS = SERVICE_CONTROL_STATUS_REASON_PARAMSA;

@foreign
typedef PSERVICE_CONTROL_STATUS_REASON_PARAMS = PSERVICE_CONTROL_STATUS_REASON_PARAMSA;

@foreign
struct _SERVICE_START_REASON {
    dwReason: DWORD;
}

@foreign
typedef SERVICE_START_REASON = _SERVICE_START_REASON;

@foreign
typedef PSERVICE_START_REASON = _SERVICE_START_REASON*;

@foreign
func ChangeServiceConfigA(hService: SC_HANDLE, dwServiceType: DWORD, dwStartType: DWORD, dwErrorControl: DWORD, lpBinaryPathName: LPCSTR, lpLoadOrderGroup: LPCSTR, lpdwTagId: LPDWORD, lpDependencies: LPCSTR, lpServiceStartName: LPCSTR, lpPassword: LPCSTR, lpDisplayName: LPCSTR): BOOL;

@foreign
func ChangeServiceConfig(hService: SC_HANDLE, dwServiceType: DWORD, dwStartType: DWORD, dwErrorControl: DWORD, lpBinaryPathName: LPCSTR, lpLoadOrderGroup: LPCSTR, lpdwTagId: LPDWORD, lpDependencies: LPCSTR, lpServiceStartName: LPCSTR, lpPassword: LPCSTR, lpDisplayName: LPCSTR): BOOL;

@foreign
func ChangeServiceConfigW(hService: SC_HANDLE, dwServiceType: DWORD, dwStartType: DWORD, dwErrorControl: DWORD, lpBinaryPathName: LPCWSTR, lpLoadOrderGroup: LPCWSTR, lpdwTagId: LPDWORD, lpDependencies: LPCWSTR, lpServiceStartName: LPCWSTR, lpPassword: LPCWSTR, lpDisplayName: LPCWSTR): BOOL;

@foreign
func ChangeServiceConfig2A(hService: SC_HANDLE, dwInfoLevel: DWORD, lpInfo: LPVOID): BOOL;

@foreign
func ChangeServiceConfig2(hService: SC_HANDLE, dwInfoLevel: DWORD, lpInfo: LPVOID): BOOL;

@foreign
func ChangeServiceConfig2W(hService: SC_HANDLE, dwInfoLevel: DWORD, lpInfo: LPVOID): BOOL;

@foreign
func CloseServiceHandle(hSCObject: SC_HANDLE): BOOL;

@foreign
func ControlService(hService: SC_HANDLE, dwControl: DWORD, lpServiceStatus: LPSERVICE_STATUS): BOOL;

@foreign
func CreateServiceA(hSCManager: SC_HANDLE, lpServiceName: LPCSTR, lpDisplayName: LPCSTR, dwDesiredAccess: DWORD, dwServiceType: DWORD, dwStartType: DWORD, dwErrorControl: DWORD, lpBinaryPathName: LPCSTR, lpLoadOrderGroup: LPCSTR, lpdwTagId: LPDWORD, lpDependencies: LPCSTR, lpServiceStartName: LPCSTR, lpPassword: LPCSTR): SC_HANDLE;

@foreign
func CreateService(hSCManager: SC_HANDLE, lpServiceName: LPCSTR, lpDisplayName: LPCSTR, dwDesiredAccess: DWORD, dwServiceType: DWORD, dwStartType: DWORD, dwErrorControl: DWORD, lpBinaryPathName: LPCSTR, lpLoadOrderGroup: LPCSTR, lpdwTagId: LPDWORD, lpDependencies: LPCSTR, lpServiceStartName: LPCSTR, lpPassword: LPCSTR): SC_HANDLE;

@foreign
func CreateServiceW(hSCManager: SC_HANDLE, lpServiceName: LPCWSTR, lpDisplayName: LPCWSTR, dwDesiredAccess: DWORD, dwServiceType: DWORD, dwStartType: DWORD, dwErrorControl: DWORD, lpBinaryPathName: LPCWSTR, lpLoadOrderGroup: LPCWSTR, lpdwTagId: LPDWORD, lpDependencies: LPCWSTR, lpServiceStartName: LPCWSTR, lpPassword: LPCWSTR): SC_HANDLE;

@foreign
func DeleteService(hService: SC_HANDLE): BOOL;

@foreign
func EnumDependentServicesA(hService: SC_HANDLE, dwServiceState: DWORD, lpServices: LPENUM_SERVICE_STATUSA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD): BOOL;

@foreign
func EnumDependentServices(hService: SC_HANDLE, dwServiceState: DWORD, lpServices: LPENUM_SERVICE_STATUSA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD): BOOL;

@foreign
func EnumDependentServicesW(hService: SC_HANDLE, dwServiceState: DWORD, lpServices: LPENUM_SERVICE_STATUSW, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD): BOOL;

@foreign
func EnumServicesStatusA(hSCManager: SC_HANDLE, dwServiceType: DWORD, dwServiceState: DWORD, lpServices: LPENUM_SERVICE_STATUSA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD, lpResumeHandle: LPDWORD): BOOL;

@foreign
func EnumServicesStatus(hSCManager: SC_HANDLE, dwServiceType: DWORD, dwServiceState: DWORD, lpServices: LPENUM_SERVICE_STATUSA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD, lpResumeHandle: LPDWORD): BOOL;

@foreign
func EnumServicesStatusW(hSCManager: SC_HANDLE, dwServiceType: DWORD, dwServiceState: DWORD, lpServices: LPENUM_SERVICE_STATUSW, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD, lpResumeHandle: LPDWORD): BOOL;

@foreign
func EnumServicesStatusExA(hSCManager: SC_HANDLE, InfoLevel: SC_ENUM_TYPE, dwServiceType: DWORD, dwServiceState: DWORD, lpServices: LPBYTE, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD, lpResumeHandle: LPDWORD, pszGroupName: LPCSTR): BOOL;

@foreign
func EnumServicesStatusEx(hSCManager: SC_HANDLE, InfoLevel: SC_ENUM_TYPE, dwServiceType: DWORD, dwServiceState: DWORD, lpServices: LPBYTE, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD, lpResumeHandle: LPDWORD, pszGroupName: LPCSTR): BOOL;

@foreign
func EnumServicesStatusExW(hSCManager: SC_HANDLE, InfoLevel: SC_ENUM_TYPE, dwServiceType: DWORD, dwServiceState: DWORD, lpServices: LPBYTE, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD, lpServicesReturned: LPDWORD, lpResumeHandle: LPDWORD, pszGroupName: LPCWSTR): BOOL;

@foreign
func GetServiceKeyNameA(hSCManager: SC_HANDLE, lpDisplayName: LPCSTR, lpServiceName: LPSTR, lpcchBuffer: LPDWORD): BOOL;

@foreign
func GetServiceKeyName(hSCManager: SC_HANDLE, lpDisplayName: LPCSTR, lpServiceName: LPSTR, lpcchBuffer: LPDWORD): BOOL;

@foreign
func GetServiceKeyNameW(hSCManager: SC_HANDLE, lpDisplayName: LPCWSTR, lpServiceName: LPWSTR, lpcchBuffer: LPDWORD): BOOL;

@foreign
func GetServiceDisplayNameA(hSCManager: SC_HANDLE, lpServiceName: LPCSTR, lpDisplayName: LPSTR, lpcchBuffer: LPDWORD): BOOL;

@foreign
func GetServiceDisplayName(hSCManager: SC_HANDLE, lpServiceName: LPCSTR, lpDisplayName: LPSTR, lpcchBuffer: LPDWORD): BOOL;

@foreign
func GetServiceDisplayNameW(hSCManager: SC_HANDLE, lpServiceName: LPCWSTR, lpDisplayName: LPWSTR, lpcchBuffer: LPDWORD): BOOL;

@foreign
func LockServiceDatabase(hSCManager: SC_HANDLE): SC_LOCK;

@foreign
func NotifyBootConfigStatus(BootAcceptable: BOOL): BOOL;

@foreign
func OpenSCManagerA(lpMachineName: LPCSTR, lpDatabaseName: LPCSTR, dwDesiredAccess: DWORD): SC_HANDLE;

@foreign
func OpenSCManager(lpMachineName: LPCSTR, lpDatabaseName: LPCSTR, dwDesiredAccess: DWORD): SC_HANDLE;

@foreign
func OpenSCManagerW(lpMachineName: LPCWSTR, lpDatabaseName: LPCWSTR, dwDesiredAccess: DWORD): SC_HANDLE;

@foreign
func OpenServiceA(hSCManager: SC_HANDLE, lpServiceName: LPCSTR, dwDesiredAccess: DWORD): SC_HANDLE;

@foreign
func OpenService(hSCManager: SC_HANDLE, lpServiceName: LPCSTR, dwDesiredAccess: DWORD): SC_HANDLE;

@foreign
func OpenServiceW(hSCManager: SC_HANDLE, lpServiceName: LPCWSTR, dwDesiredAccess: DWORD): SC_HANDLE;

@foreign
func QueryServiceConfigA(hService: SC_HANDLE, lpServiceConfig: LPQUERY_SERVICE_CONFIGA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceConfig(hService: SC_HANDLE, lpServiceConfig: LPQUERY_SERVICE_CONFIGA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceConfigW(hService: SC_HANDLE, lpServiceConfig: LPQUERY_SERVICE_CONFIGW, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceConfig2A(hService: SC_HANDLE, dwInfoLevel: DWORD, lpBuffer: LPBYTE, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceConfig2(hService: SC_HANDLE, dwInfoLevel: DWORD, lpBuffer: LPBYTE, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceConfig2W(hService: SC_HANDLE, dwInfoLevel: DWORD, lpBuffer: LPBYTE, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceLockStatusA(hSCManager: SC_HANDLE, lpLockStatus: LPQUERY_SERVICE_LOCK_STATUSA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceLockStatus(hSCManager: SC_HANDLE, lpLockStatus: LPQUERY_SERVICE_LOCK_STATUSA, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceLockStatusW(hSCManager: SC_HANDLE, lpLockStatus: LPQUERY_SERVICE_LOCK_STATUSW, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceObjectSecurity(hService: SC_HANDLE, dwSecurityInformation: SECURITY_INFORMATION, lpSecurityDescriptor: PSECURITY_DESCRIPTOR, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func QueryServiceStatus(hService: SC_HANDLE, lpServiceStatus: LPSERVICE_STATUS): BOOL;

@foreign
func QueryServiceStatusEx(hService: SC_HANDLE, InfoLevel: SC_STATUS_TYPE, lpBuffer: LPBYTE, cbBufSize: DWORD, pcbBytesNeeded: LPDWORD): BOOL;

@foreign
func RegisterServiceCtrlHandlerA(lpServiceName: LPCSTR, lpHandlerProc: LPHANDLER_FUNCTION): SERVICE_STATUS_HANDLE;

@foreign
func RegisterServiceCtrlHandler(lpServiceName: LPCSTR, lpHandlerProc: LPHANDLER_FUNCTION): SERVICE_STATUS_HANDLE;

@foreign
func RegisterServiceCtrlHandlerW(lpServiceName: LPCWSTR, lpHandlerProc: LPHANDLER_FUNCTION): SERVICE_STATUS_HANDLE;

@foreign
func RegisterServiceCtrlHandlerExA(lpServiceName: LPCSTR, lpHandlerProc: LPHANDLER_FUNCTION_EX, lpContext: LPVOID): SERVICE_STATUS_HANDLE;

@foreign
func RegisterServiceCtrlHandlerEx(lpServiceName: LPCSTR, lpHandlerProc: LPHANDLER_FUNCTION_EX, lpContext: LPVOID): SERVICE_STATUS_HANDLE;

@foreign
func RegisterServiceCtrlHandlerExW(lpServiceName: LPCWSTR, lpHandlerProc: LPHANDLER_FUNCTION_EX, lpContext: LPVOID): SERVICE_STATUS_HANDLE;

@foreign
func SetServiceObjectSecurity(hService: SC_HANDLE, dwSecurityInformation: SECURITY_INFORMATION, lpSecurityDescriptor: PSECURITY_DESCRIPTOR): BOOL;

@foreign
func SetServiceStatus(hServiceStatus: SERVICE_STATUS_HANDLE, lpServiceStatus: LPSERVICE_STATUS): BOOL;

@foreign
func StartServiceCtrlDispatcherA(lpServiceStartTable: SERVICE_TABLE_ENTRYA*): BOOL;

@foreign
func StartServiceCtrlDispatcher(lpServiceStartTable: SERVICE_TABLE_ENTRYA*): BOOL;

@foreign
func StartServiceCtrlDispatcherW(lpServiceStartTable: SERVICE_TABLE_ENTRYW*): BOOL;

@foreign
func StartServiceA(hService: SC_HANDLE, dwNumServiceArgs: DWORD, lpServiceArgVectors: LPCSTR*): BOOL;

@foreign
func StartService(hService: SC_HANDLE, dwNumServiceArgs: DWORD, lpServiceArgVectors: LPCSTR*): BOOL;

@foreign
func StartServiceW(hService: SC_HANDLE, dwNumServiceArgs: DWORD, lpServiceArgVectors: LPCWSTR*): BOOL;

@foreign
func UnlockServiceDatabase(ScLock: SC_LOCK): BOOL;

@foreign
func NotifyServiceStatusChangeA(hService: SC_HANDLE, dwNotifyMask: DWORD, pNotifyBuffer: PSERVICE_NOTIFYA): DWORD;

@foreign
func NotifyServiceStatusChange(hService: SC_HANDLE, dwNotifyMask: DWORD, pNotifyBuffer: PSERVICE_NOTIFYA): DWORD;

@foreign
func NotifyServiceStatusChangeW(hService: SC_HANDLE, dwNotifyMask: DWORD, pNotifyBuffer: PSERVICE_NOTIFYW): DWORD;

@foreign
func ControlServiceExA(hService: SC_HANDLE, dwControl: DWORD, dwInfoLevel: DWORD, pControlParams: PVOID): BOOL;

@foreign
func ControlServiceEx(hService: SC_HANDLE, dwControl: DWORD, dwInfoLevel: DWORD, pControlParams: PVOID): BOOL;

@foreign
func ControlServiceExW(hService: SC_HANDLE, dwControl: DWORD, dwInfoLevel: DWORD, pControlParams: PVOID): BOOL;

@foreign
func QueryServiceDynamicInformation(hServiceStatus: SERVICE_STATUS_HANDLE, dwInfoLevel: DWORD, ppDynamicInfo: PVOID*): BOOL;

@foreign
enum _SC_EVENT_TYPE {
    SC_EVENT_DATABASE_CHANGE,
    SC_EVENT_PROPERTY_CHANGE,
    SC_EVENT_STATUS_CHANGE,
}

@foreign
typedef SC_EVENT_TYPE = _SC_EVENT_TYPE;

@foreign
typedef PSC_EVENT_TYPE = _SC_EVENT_TYPE*;

@foreign
typedef SC_NOTIFICATION_CALLBACK = func(dwNotify: DWORD, pCallbackContext: PVOID);

@foreign
typedef PSC_NOTIFICATION_CALLBACK = SC_NOTIFICATION_CALLBACK*;

@foreign
typedef PSC_NOTIFICATION_REGISTRATION = _SC_NOTIFICATION_REGISTRATION*;

@foreign
func SubscribeServiceChangeNotifications(hService: SC_HANDLE, eEventType: SC_EVENT_TYPE, pCallback: PSC_NOTIFICATION_CALLBACK, pCallbackContext: PVOID, pSubscription: PSC_NOTIFICATION_REGISTRATION*): DWORD;

@foreign
func UnsubscribeServiceChangeNotifications(pSubscription: PSC_NOTIFICATION_REGISTRATION);

@foreign
func WaitServiceState(hService: SC_HANDLE, dwNotify: DWORD, dwTimeout: DWORD, hCancelEvent: HANDLE): DWORD;

@foreign
struct _SC_NOTIFICATION_REGISTRATION;

