@foreign const CONSOLE_TEXTMODE_BUFFER = 1;

@foreign const RIGHT_ALT_PRESSED  = 0x0001;
@foreign const LEFT_ALT_PRESSED   = 0x0002;
@foreign const RIGHT_CTRL_PRESSED = 0x0004;
@foreign const LEFT_CTRL_PRESSED  = 0x0008;
@foreign const SHIFT_PRESSED      = 0x0010;
@foreign const NUMLOCK_ON         = 0x0020;
@foreign const SCROLLLOCK_ON      = 0x0040;
@foreign const CAPSLOCK_ON        = 0x0080;
@foreign const ENHANCED_KEY       = 0x0100;

@foreign const FROM_LEFT_1ST_BUTTON_PRESSED = 0x0001;
@foreign const RIGHTMOST_BUTTON_PRESSED     = 0x0002;
@foreign const FROM_LEFT_2ND_BUTTON_PRESSED = 0x0004;
@foreign const FROM_LEFT_3RD_BUTTON_PRESSED = 0x0008;
@foreign const FROM_LEFT_4TH_BUTTON_PRESSED = 0x0010;

@foreign const MOUSE_MOVED    = 0x0001;
@foreign const DOUBLE_CLICK   = 0x0002;
@foreign const MOUSE_WHEELED  = 0x0004;
@foreign const MOUSE_HWHEELED = 0x0008;

@foreign const KEY_EVENT                 = 0x0001;
@foreign const MOUSE_EVENT               = 0x0002;
@foreign const WINDOW_BUFFER_SIZE_EVENT  = 0x0004;
@foreign const MENU_EVENT                = 0x0008;
@foreign const FOCUS_EVENT               = 0x0010;

@foreign const FOREGROUND_BLUE      = 0x0001;
@foreign const FOREGROUND_GREEN     = 0x0002;
@foreign const FOREGROUND_RED       = 0x0004;
@foreign const FOREGROUND_INTENSITY = 0x0008;
@foreign const BACKGROUND_BLUE      = 0x0010;
@foreign const BACKGROUND_GREEN     = 0x0020;
@foreign const BACKGROUND_RED       = 0x0040;
@foreign const BACKGROUND_INTENSITY = 0x0080;

@foreign const COMMON_LVB_LEADING_BYTE    = 0x0100;
@foreign const COMMON_LVB_TRAILING_BYTE   = 0x0200;
@foreign const COMMON_LVB_GRID_HORIZONTAL = 0x0400;
@foreign const COMMON_LVB_GRID_LVERTICAL  = 0x0800;
@foreign const COMMON_LVB_GRID_RVERTICAL  = 0x1000;
@foreign const COMMON_LVB_REVERSE_VIDEO   = 0x4000;
@foreign const COMMON_LVB_UNDERSCORE      = 0x8000;

@foreign const CONSOLE_NO_SELECTION          = 0x0000;
@foreign const CONSOLE_SELECTION_IN_PROGRESS = 0x0001;
@foreign const CONSOLE_SELECTION_NOT_EMPTY   = 0x0002;
@foreign const CONSOLE_MOUSE_SELECTION       = 0x0004;
@foreign const CONSOLE_MOUSE_DOWN            = 0x0008;

@foreign const CTRL_C_EVENT        = 0;
@foreign const CTRL_BREAK_EVENT    = 1;
@foreign const CTRL_CLOSE_EVENT    = 2;
@foreign const CTRL_LOGOFF_EVENT   = 5;
@foreign const CTRL_SHUTDOWN_EVENT = 6;

@foreign const ENABLE_PROCESSED_INPUT        = 0x0001;
@foreign const ENABLE_LINE_INPUT             = 0x0002;
@foreign const ENABLE_ECHO_INPUT             = 0x0004;
@foreign const ENABLE_WINDOW_INPUT           = 0x0008;
@foreign const ENABLE_MOUSE_INPUT            = 0x0010;
@foreign const ENABLE_INSERT_MODE            = 0x0020;
@foreign const ENABLE_QUICK_EDIT_MODE        = 0x0040;
@foreign const ENABLE_EXTENDED_FLAGS         = 0x0080;
@foreign const ENABLE_AUTO_POSITION          = 0x0100;
@foreign const ENABLE_VIRTUAL_TERMINAL_INPUT = 0x0200;

@foreign const ENABLE_PROCESSED_OUTPUT            = 0x0001;
@foreign const ENABLE_WRAP_AT_EOL_OUTPUT          = 0x0002;
@foreign const ENABLE_VIRTUAL_TERMINAL_PROCESSING = 0x0004;
@foreign const DISABLE_NEWLINE_AUTO_RETURN        = 0x0008;
@foreign const ENABLE_LVB_GRID_WORLDWIDE          = 0x0010;

@foreign
struct COORD {
    X: SHORT;
    Y: SHORT;
}

@foreign
typedef PCOORD = COORD*;

@foreign
struct SMALL_RECT {
    Left: SHORT;
    Top: SHORT;
    Right: SHORT;
    Bottom: SHORT;
}

@foreign
typedef PSMALL_RECT = SMALL_RECT*;

union KEY_EVENT_RECORD___inner {
    UnicodeChar: WCHAR;
    AsciiChar: CHAR;
}

@foreign
struct KEY_EVENT_RECORD {
    bKeyDown: BOOL;
    wRepeatCount: WORD;
    wVirtualKeyCode: WORD;
    wVirtualScanCode: WORD;
    uChar: KEY_EVENT_RECORD___inner;
    dwControlKeyState: DWORD;
}

@foreign
typedef PKEY_EVENT_RECORD = KEY_EVENT_RECORD*;

@foreign
struct MOUSE_EVENT_RECORD {
    dwMousePosition: COORD;
    dwButtonState: DWORD;
    dwControlKeyState: DWORD;
    dwEventFlags: DWORD;
}

@foreign
typedef PMOUSE_EVENT_RECORD = MOUSE_EVENT_RECORD*;

@foreign
struct WINDOW_BUFFER_SIZE_RECORD {
    dwSize: COORD;
}

@foreign
typedef PWINDOW_BUFFER_SIZE_RECORD = WINDOW_BUFFER_SIZE_RECORD*;

@foreign
struct MENU_EVENT_RECORD {
    dwCommandId: UINT;
}

@foreign
typedef PMENU_EVENT_RECORD = MENU_EVENT_RECORD*;

@foreign
struct FOCUS_EVENT_RECORD {
    bSetFocus: BOOL;
}

@foreign
typedef PFOCUS_EVENT_RECORD = FOCUS_EVENT_RECORD*;

union INPUT_RECORD___inner {
    KeyEvent: KEY_EVENT_RECORD;
    MouseEvent: MOUSE_EVENT_RECORD;
    WindowBufferSizeEvent: WINDOW_BUFFER_SIZE_RECORD;
    MenuEvent: MENU_EVENT_RECORD;
    FocusEvent: FOCUS_EVENT_RECORD;
}

@foreign
struct INPUT_RECORD {
    EventType: WORD;
    Event: INPUT_RECORD___inner;
}

@foreign
typedef PINPUT_RECORD = INPUT_RECORD*;

union CHAR_INFO___inner {
    UnicodeChar: WCHAR;
    AsciiChar: CHAR;
}

@foreign
struct CHAR_INFO {
    Char: CHAR_INFO___inner;
    Attributes: WORD;
}

@foreign
typedef PCHAR_INFO = CHAR_INFO*;

@foreign
struct CONSOLE_SCREEN_BUFFER_INFO {
    dwSize: COORD;
    dwCursorPosition: COORD;
    wAttributes: WORD;
    srWindow: SMALL_RECT;
    dwMaximumWindowSize: COORD;
}

@foreign
typedef PCONSOLE_SCREEN_BUFFER_INFO = CONSOLE_SCREEN_BUFFER_INFO*;

@foreign
struct CONSOLE_SCREEN_BUFFER_INFOEX {
    cbSize: ULONG;
    dwSize: COORD;
    dwCursorPosition: COORD;
    wAttributes: WORD;
    srWindow: SMALL_RECT;
    dwMaximumWindowSize: COORD;
    wPopupAttributes: WORD;
    bFullscreenSupported: BOOL;
    ColorTable: COLORREF[16];
}

@foreign
typedef PCONSOLE_SCREEN_BUFFER_INFOEX = CONSOLE_SCREEN_BUFFER_INFOEX*;

@foreign
struct CONSOLE_CURSOR_INFO {
    dwSize: DWORD;
    bVisible: BOOL;
}

@foreign
typedef PCONSOLE_CURSOR_INFO = CONSOLE_CURSOR_INFO*;

@foreign
struct CONSOLE_FONT_INFO {
    nFont: DWORD;
    dwFontSize: COORD;
}

@foreign
typedef PCONSOLE_FONT_INFO = CONSOLE_FONT_INFO*;

@foreign
struct CONSOLE_FONT_INFOEX {
    cbSize: ULONG;
    nFont: DWORD;
    dwFontSize: COORD;
    FontFamily: UINT;
    FontWeight: UINT;
    FaceName: WCHAR[32];
}

@foreign
typedef PCONSOLE_FONT_INFOEX = CONSOLE_FONT_INFOEX*;

@foreign
struct CONSOLE_HISTORY_INFO {
    cbSize: UINT;
    HistoryBufferSize: UINT;
    NumberOfHistoryBuffers: UINT;
    dwFlags: DWORD;
}

@foreign
typedef PCONSOLE_HISTORY_INFO = CONSOLE_HISTORY_INFO*;

@foreign
struct CONSOLE_SELECTION_INFO {
    dwFlags: DWORD;
    dwSelectionAnchor: COORD;
    srSelection: SMALL_RECT;
}

@foreign
typedef PCONSOLE_SELECTION_INFO = CONSOLE_SELECTION_INFO*;

@foreign
typedef PHANDLER_ROUTINE = func(CtrlType: DWORD): BOOL;

@foreign
func PeekConsoleInputW(hConsoleInput: HANDLE, lpBuffer: PINPUT_RECORD, nLength: DWORD, lpNumberOfEventsRead: LPDWORD): BOOL;

@foreign
func WriteConsoleInputA(hConsoleInput: HANDLE, lpBuffer: INPUT_RECORD*, nLength: DWORD, lpNumberOfEventsWritten: LPDWORD): BOOL;

@foreign
func WriteConsoleInput(hConsoleInput: HANDLE, lpBuffer: INPUT_RECORD*, nLength: DWORD, lpNumberOfEventsWritten: LPDWORD): BOOL;

@foreign
func WriteConsoleInputW(hConsoleInput: HANDLE, lpBuffer: INPUT_RECORD*, nLength: DWORD, lpNumberOfEventsWritten: LPDWORD): BOOL;

@foreign
func ReadConsoleOutputA(hConsoleOutput: HANDLE, lpBuffer: PCHAR_INFO, dwBufferSize: COORD, dwBufferCoord: COORD, lpReadRegion: PSMALL_RECT): BOOL;

@foreign
func ReadConsoleOutput(hConsoleOutput: HANDLE, lpBuffer: PCHAR_INFO, dwBufferSize: COORD, dwBufferCoord: COORD, lpReadRegion: PSMALL_RECT): BOOL;

@foreign
func ReadConsoleOutputW(hConsoleOutput: HANDLE, lpBuffer: PCHAR_INFO, dwBufferSize: COORD, dwBufferCoord: COORD, lpReadRegion: PSMALL_RECT): BOOL;

@foreign
func WriteConsoleOutputA(hConsoleOutput: HANDLE, lpBuffer: CHAR_INFO*, dwBufferSize: COORD, dwBufferCoord: COORD, lpWriteRegion: PSMALL_RECT): BOOL;

@foreign
func WriteConsoleOutput(hConsoleOutput: HANDLE, lpBuffer: CHAR_INFO*, dwBufferSize: COORD, dwBufferCoord: COORD, lpWriteRegion: PSMALL_RECT): BOOL;

@foreign
func WriteConsoleOutputW(hConsoleOutput: HANDLE, lpBuffer: CHAR_INFO*, dwBufferSize: COORD, dwBufferCoord: COORD, lpWriteRegion: PSMALL_RECT): BOOL;

@foreign
func ReadConsoleOutputCharacterA(hConsoleOutput: HANDLE, lpCharacter: LPSTR, nLength: DWORD, dwReadCoord: COORD, lpNumberOfCharsRead: LPDWORD): BOOL;

@foreign
func ReadConsoleOutputCharacter(hConsoleOutput: HANDLE, lpCharacter: LPSTR, nLength: DWORD, dwReadCoord: COORD, lpNumberOfCharsRead: LPDWORD): BOOL;

@foreign
func ReadConsoleOutputCharacterW(hConsoleOutput: HANDLE, lpCharacter: LPWSTR, nLength: DWORD, dwReadCoord: COORD, lpNumberOfCharsRead: LPDWORD): BOOL;

@foreign
func ReadConsoleOutputAttribute(hConsoleOutput: HANDLE, lpAttribute: LPWORD, nLength: DWORD, dwReadCoord: COORD, lpNumberOfAttrsRead: LPDWORD): BOOL;

@foreign
func WriteConsoleOutputCharacterA(hConsoleOutput: HANDLE, lpCharacter: LPCSTR, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfCharsWritten: LPDWORD): BOOL;

@foreign
func WriteConsoleOutputCharacter(hConsoleOutput: HANDLE, lpCharacter: LPCSTR, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfCharsWritten: LPDWORD): BOOL;

@foreign
func WriteConsoleOutputCharacterW(hConsoleOutput: HANDLE, lpCharacter: LPCWSTR, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfCharsWritten: LPDWORD): BOOL;

@foreign
func WriteConsoleOutputAttribute(hConsoleOutput: HANDLE, lpAttribute: WORD*, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfAttrsWritten: LPDWORD): BOOL;

@foreign
func FillConsoleOutputCharacterA(hConsoleOutput: HANDLE, cCharacter: CHAR, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfCharsWritten: LPDWORD): BOOL;

@foreign
func FillConsoleOutputCharacter(hConsoleOutput: HANDLE, cCharacter: CHAR, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfCharsWritten: LPDWORD): BOOL;

@foreign
func FillConsoleOutputCharacterW(hConsoleOutput: HANDLE, cCharacter: WCHAR, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfCharsWritten: LPDWORD): BOOL;

@foreign
func FillConsoleOutputAttribute(hConsoleOutput: HANDLE, wAttribute: WORD, nLength: DWORD, dwWriteCoord: COORD, lpNumberOfAttrsWritten: LPDWORD): BOOL;

@foreign
func GetConsoleScreenBufferInfo(hConsoleOutput: HANDLE, lpConsoleScreenBufferInfo: PCONSOLE_SCREEN_BUFFER_INFO): BOOL;

@foreign
func GetConsoleScreenBufferInfoEx(hConsoleOutput: HANDLE, lpConsoleScreenBufferInfoEx: PCONSOLE_SCREEN_BUFFER_INFOEX): BOOL;

@foreign
func SetConsoleScreenBufferInfoEx(hConsoleOutput: HANDLE, lpConsoleScreenBufferInfoEx: PCONSOLE_SCREEN_BUFFER_INFOEX): BOOL;

@foreign
func GetLargestConsoleWindowSize(hConsoleOutput: HANDLE): COORD;

@foreign
func GetConsoleCursorInfo(hConsoleOutput: HANDLE, lpConsoleCursorInfo: PCONSOLE_CURSOR_INFO): BOOL;

@foreign
func GetCurrentConsoleFont(hConsoleOutput: HANDLE, bMaximumWindow: BOOL, lpConsoleCurrentFont: PCONSOLE_FONT_INFO): BOOL;

@foreign
func GetCurrentConsoleFontEx(hConsoleOutput: HANDLE, bMaximumWindow: BOOL, lpConsoleCurrentFontEx: PCONSOLE_FONT_INFOEX): BOOL;

@foreign
func SetCurrentConsoleFontEx(hConsoleOutput: HANDLE, bMaximumWindow: BOOL, lpConsoleCurrentFontEx: PCONSOLE_FONT_INFOEX): BOOL;

@foreign
func GetConsoleHistoryInfo(lpConsoleHistoryInfo: PCONSOLE_HISTORY_INFO): BOOL;

@foreign
func SetConsoleHistoryInfo(lpConsoleHistoryInfo: PCONSOLE_HISTORY_INFO): BOOL;

@foreign
func GetConsoleFontSize(hConsoleOutput: HANDLE, nFont: DWORD): COORD;

@foreign
func GetConsoleSelectionInfo(lpConsoleSelectionInfo: PCONSOLE_SELECTION_INFO): BOOL;

@foreign
func GetNumberOfConsoleMouseButtons(lpNumberOfMouseButtons: LPDWORD): BOOL;

@foreign
func SetConsoleActiveScreenBuffer(hConsoleOutput: HANDLE): BOOL;

@foreign
func FlushConsoleInputBuffer(hConsoleInput: HANDLE): BOOL;

@foreign
func SetConsoleScreenBufferSize(hConsoleOutput: HANDLE, dwSize: COORD): BOOL;

@foreign
func SetConsoleCursorPosition(hConsoleOutput: HANDLE, dwCursorPosition: COORD): BOOL;

@foreign
func SetConsoleCursorInfo(hConsoleOutput: HANDLE, lpConsoleCursorInfo: CONSOLE_CURSOR_INFO*): BOOL;

@foreign
func ScrollConsoleScreenBufferA(hConsoleOutput: HANDLE, lpScrollRectangle: SMALL_RECT*, lpClipRectangle: SMALL_RECT*, dwDestinationOrigin: COORD, lpFill: CHAR_INFO*): BOOL;

@foreign
func ScrollConsoleScreenBuffer(hConsoleOutput: HANDLE, lpScrollRectangle: SMALL_RECT*, lpClipRectangle: SMALL_RECT*, dwDestinationOrigin: COORD, lpFill: CHAR_INFO*): BOOL;

@foreign
func ScrollConsoleScreenBufferW(hConsoleOutput: HANDLE, lpScrollRectangle: SMALL_RECT*, lpClipRectangle: SMALL_RECT*, dwDestinationOrigin: COORD, lpFill: CHAR_INFO*): BOOL;

@foreign
func SetConsoleWindowInfo(hConsoleOutput: HANDLE, bAbsolute: BOOL, lpConsoleWindow: SMALL_RECT*): BOOL;

@foreign
func SetConsoleTextAttribute(hConsoleOutput: HANDLE, wAttributes: WORD): BOOL;

@foreign
func GenerateConsoleCtrlEvent(dwCtrlEvent: DWORD, dwProcessGroupId: DWORD): BOOL;

@foreign
func FreeConsole(): BOOL;

@foreign
func AttachConsole(dwProcessId: DWORD): BOOL;

@foreign
func GetConsoleTitleA(lpConsoleTitle: LPSTR, nSize: DWORD): DWORD;

@foreign
func GetConsoleTitle(lpConsoleTitle: LPSTR, nSize: DWORD): DWORD;

@foreign
func GetConsoleTitleW(lpConsoleTitle: LPWSTR, nSize: DWORD): DWORD;

@foreign
func GetConsoleOriginalTitleA(lpConsoleTitle: LPSTR, nSize: DWORD): DWORD;

@foreign
func GetConsoleOriginalTitle(lpConsoleTitle: LPSTR, nSize: DWORD): DWORD;

@foreign
func GetConsoleOriginalTitleW(lpConsoleTitle: LPWSTR, nSize: DWORD): DWORD;

@foreign
func SetConsoleTitleA(lpConsoleTitle: LPCSTR): BOOL;

@foreign
func SetConsoleTitle(lpConsoleTitle: LPCSTR): BOOL;

@foreign
func SetConsoleTitleW(lpConsoleTitle: LPCWSTR): BOOL;

@foreign
struct CONSOLE_READCONSOLE_CONTROL {
    nLength: ULONG;
    nInitialChars: ULONG;
    dwCtrlWakeupMask: ULONG;
    dwControlKeyState: ULONG;
}

@foreign
typedef PCONSOLE_READCONSOLE_CONTROL = CONSOLE_READCONSOLE_CONTROL*;

@foreign
func CreateConsoleScreenBuffer(dwDesiredAccess: DWORD, dwShareMode: DWORD, lpSecurityAttributes: SECURITY_ATTRIBUTES*, dwFlags: DWORD, lpScreenBufferData: LPVOID): HANDLE;

@foreign
func SetConsoleCP(wCodePageID: UINT): BOOL;

@foreign
func SetConsoleOutputCP(wCodePageID: UINT): BOOL;

@foreign
func GetConsoleDisplayMode(lpModeFlags: LPDWORD): BOOL;

@foreign
func SetConsoleDisplayMode(hConsoleOutput: HANDLE, dwFlags: DWORD, lpNewScreenBufferDimensions: PCOORD): BOOL;

@foreign
func GetConsoleWindow(): HWND;

@foreign
func GetConsoleProcessList(lpdwProcessList: LPDWORD, dwProcessCount: DWORD): DWORD;

@foreign
func AddConsoleAliasA(Source: LPSTR, Target: LPSTR, ExeName: LPSTR): BOOL;

@foreign
func AddConsoleAlias(Source: LPSTR, Target: LPSTR, ExeName: LPSTR): BOOL;

@foreign
func AddConsoleAliasW(Source: LPWSTR, Target: LPWSTR, ExeName: LPWSTR): BOOL;

@foreign
func GetConsoleAliasA(Source: LPSTR, TargetBuffer: LPSTR, TargetBufferLength: DWORD, ExeName: LPSTR): DWORD;

@foreign
func GetConsoleAlias(Source: LPSTR, TargetBuffer: LPSTR, TargetBufferLength: DWORD, ExeName: LPSTR): DWORD;

@foreign
func GetConsoleAliasW(Source: LPWSTR, TargetBuffer: LPWSTR, TargetBufferLength: DWORD, ExeName: LPWSTR): DWORD;

@foreign
func GetConsoleAliasesLengthA(ExeName: LPSTR): DWORD;

@foreign
func GetConsoleAliasesLength(ExeName: LPSTR): DWORD;

@foreign
func GetConsoleAliasesLengthW(ExeName: LPWSTR): DWORD;

@foreign
func GetConsoleAliasExesLengthA(): DWORD;

@foreign
func GetConsoleAliasExesLength(): DWORD;

@foreign
func GetConsoleAliasExesLengthW(): DWORD;

@foreign
func GetConsoleAliasesA(AliasBuffer: LPSTR, AliasBufferLength: DWORD, ExeName: LPSTR): DWORD;

@foreign
func GetConsoleAliases(AliasBuffer: LPSTR, AliasBufferLength: DWORD, ExeName: LPSTR): DWORD;

@foreign
func GetConsoleAliasesW(AliasBuffer: LPWSTR, AliasBufferLength: DWORD, ExeName: LPWSTR): DWORD;

@foreign
func GetConsoleAliasExesA(ExeNameBuffer: LPSTR, ExeNameBufferLength: DWORD): DWORD;

@foreign
func GetConsoleAliasExes(ExeNameBuffer: LPSTR, ExeNameBufferLength: DWORD): DWORD;

@foreign
func GetConsoleAliasExesW(ExeNameBuffer: LPWSTR, ExeNameBufferLength: DWORD): DWORD;

